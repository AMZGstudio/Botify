	.file	"code.c"
 # GNU C++14 (tdm64-1) version 10.3.0 (x86_64-w64-mingw32)
 #	compiled by GNU C version 10.3.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.23-GMP

 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: 
 # -iprefix C:/src/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/10.3.0/
 # -D_REENTRANT code.c -mtune=generic -march=x86-64 -auxbase-strip code.s
 # -g -O2 -fverbose-asm
 # options enabled:  -faggressive-loop-optimizations -falign-functions
 # -falign-jumps -falign-labels -falign-loops -fallocation-dce
 # -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
 # -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments
 # -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
 # -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
 # -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
 # -feliminate-unused-debug-symbols -feliminate-unused-debug-types
 # -fexceptions -fexpensive-optimizations -ffinite-loops
 # -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
 # -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
 # -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
 # -finline-atomics -finline-functions -finline-functions-called-once
 # -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
 # -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
 # -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
 # -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
 # -fira-share-save-slots -fira-share-spill-slots
 # -fisolate-erroneous-paths-dereference -fivopts -fkeep-inline-dllexport
 # -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
 # -fmath-errno -fmerge-constants -fmerge-debug-strings
 # -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
 # -foptimize-strlen -fpartial-inlining -fpeephole -fpeephole2 -fpic -fplt
 # -fprefetch-loop-arrays -free -freg-struct-return -freorder-blocks
 # -freorder-functions -frerun-cse-after-loop
 # -fsched-critical-path-heuristic -fsched-dep-count-heuristic
 # -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
 # -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
 # -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
 # -fsemantic-interposition -fset-stack-executable -fshow-column
 # -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
 # -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
 # -fstdarg-opt -fstore-merging -fstrict-aliasing
 # -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
 # -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
 # -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
 # -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
 # -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
 # -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
 # -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
 # -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
 # -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
 # -ftree-vrp -funit-at-a-time -funwind-tables -fvar-tracking
 # -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
 # -m128bit-long-double -m64 -m80387 -maccumulate-outgoing-args
 # -malign-double -malign-stringops -mavx256-split-unaligned-load
 # -mavx256-split-unaligned-store -mfancy-math-387 -mfentry -mfp-ret-in-387
 # -mfxsr -mieee-fp -mlong-double-80 -mmmx -mms-bitfields -mno-sse4
 # -mpush-args -mred-zone -msse -msse2 -mstack-arg-probe -mstackrealign
 # -mvzeroupper

	.text
.Ltext0:
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
	.align 8
.LC0:
	.ascii "C:\\Windows\\System32\\notepad.exe\0"
	.section	.text.startup,"x"
	.p2align 4
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
.LFB6172:
	.file 1 "code.c"
	.loc 1 4 12 view -0
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI0:
	subq	$224, %rsp	 #,
	.seh_stackalloc	224
.LCFI1:
	.seh_endprologue
 # code.c:4: int main() {
	.loc 1 4 12 is_stmt 0 view .LVU1
	call	__main	 #
.LVL0:
	.loc 1 6 5 is_stmt 1 view .LVU2
	.loc 1 9 5 view .LVU3
	.loc 1 10 5 view .LVU4
	.loc 1 11 5 view .LVU5
	leaq	112(%rsp), %rdx	 #, tmp83
	xorl	%eax, %eax	 # tmp85
 # code.c:15:     CreateProcess(
	.loc 1 15 18 is_stmt 0 view .LVU6
	xorl	%r9d, %r9d	 #
 # code.c:11:     ZeroMemory(&startupInfo, sizeof(STARTUPINFO));
	.loc 1 11 5 view .LVU7
	movq	%rdx, %rdi	 # tmp83, tmp84
	movl	$13, %ecx	 #, tmp86
 # code.c:15:     CreateProcess(
	.loc 1 15 18 view .LVU8
	xorl	%r8d, %r8d	 #
 # code.c:11:     ZeroMemory(&startupInfo, sizeof(STARTUPINFO));
	.loc 1 11 5 view .LVU9
	rep stosq
	.loc 1 12 5 is_stmt 1 view .LVU10
 # code.c:15:     CreateProcess(
	.loc 1 15 18 is_stmt 0 view .LVU11
	leaq	80(%rsp), %rax	 #, tmp87
	movq	%rdx, 64(%rsp)	 # tmp83,
	leaq	.LC0(%rip), %rcx	 #,
 # code.c:12:     startupInfo.cb = sizeof(STARTUPINFO);
	.loc 1 12 20 view .LVU12
	movl	$104, 112(%rsp)	 #, startupInfo.cb
	.loc 1 15 5 is_stmt 1 view .LVU13
 # code.c:15:     CreateProcess(
	.loc 1 15 18 is_stmt 0 view .LVU14
	xorl	%edx, %edx	 #
	movq	%rax, 72(%rsp)	 # tmp87,
	movq	$0, 56(%rsp)	 #,
	movq	$0, 48(%rsp)	 #,
	movl	$0, 40(%rsp)	 #,
	movl	$0, 32(%rsp)	 #,
	call	*__imp_CreateProcessA(%rip)	 #
.LVL1:
	.loc 1 28 5 is_stmt 1 view .LVU15
 # code.c:29: }
	.loc 1 29 1 is_stmt 0 view .LVU16
	xorl	%eax, %eax	 #
	addq	$224, %rsp	 #,
.LCFI2:
	popq	%rdi	 #
.LCFI3:
	ret	
.LFE6172:
	.seh_endproc
	.section	.debug_frame,"dr"
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x3
	.ascii "\0"
	.uleb128 0x1
	.sleb128 -8
	.uleb128 0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.secrel32	.Lframe0
	.quad	.LFB6172
	.quad	.LFE6172-.LFB6172
	.byte	0x4
	.long	.LCFI0-.LFB6172
	.byte	0xe
	.uleb128 0x10
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xe
	.uleb128 0xf0
	.byte	0x4
	.long	.LCFI2-.LCFI1
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.long	.LCFI3-.LCFI2
	.byte	0xc5
	.byte	0xe
	.uleb128 0x8
	.align 8
.LEFDE0:
	.text
.Letext0:
	.file 2 "C:/src/TDM-GCC-64/x86_64-w64-mingw32/include/corecrt.h"
	.file 3 "C:/src/TDM-GCC-64/x86_64-w64-mingw32/include/minwindef.h"
	.file 4 "C:/src/TDM-GCC-64/x86_64-w64-mingw32/include/winnt.h"
	.file 5 "C:/src/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/10.3.0/include/c++/cstdlib"
	.file 6 "C:/src/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/10.3.0/include/c++/bits/std_abs.h"
	.file 7 "C:/src/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/10.3.0/include/c++/x86_64-w64-mingw32/bits/c++config.h"
	.file 8 "C:/src/TDM-GCC-64/x86_64-w64-mingw32/include/stdlib.h"
	.file 9 "C:/src/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/10.3.0/include/c++/stdlib.h"
	.file 10 "C:/src/TDM-GCC-64/x86_64-w64-mingw32/include/processthreadsapi.h"
	.file 11 "<built-in>"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0xd32
	.word	0x4
	.secrel32	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.ascii "GNU C++14 10.3.0 -mtune=generic -march=x86-64 -g -O2\0"
	.byte	0x4
	.ascii "code.c\0"
	.ascii "C:\\dev\\Magshimim\\y3-s1\\Botify\\test\0"
	.secrel32	.Ldebug_ranges0+0
	.quad	0
	.secrel32	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0x3
	.long	0x7c
	.uleb128 0x4
	.ascii "size_t\0"
	.byte	0x2
	.byte	0x28
	.byte	0x2c
	.long	0x98
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x5
	.byte	0x8
	.long	0x7c
	.uleb128 0x5
	.byte	0x8
	.long	0xf8
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0x3
	.long	0xf8
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x6
	.byte	0x8
	.uleb128 0x4
	.ascii "BYTE\0"
	.byte	0x3
	.byte	0x8b
	.byte	0x19
	.long	0x12d
	.uleb128 0x4
	.ascii "WORD\0"
	.byte	0x3
	.byte	0x8c
	.byte	0x1a
	.long	0xc3
	.uleb128 0x4
	.ascii "DWORD\0"
	.byte	0x3
	.byte	0x8d
	.byte	0x1d
	.long	0x118
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0x5
	.byte	0x8
	.long	0x140
	.uleb128 0x4
	.ascii "LPBYTE\0"
	.byte	0x3
	.byte	0x91
	.byte	0x11
	.long	0x171
	.uleb128 0x5
	.byte	0x8
	.long	0x18c
	.uleb128 0x7
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0x8
	.ascii "CHAR\0"
	.byte	0x4
	.word	0x11d
	.byte	0x10
	.long	0x7c
	.uleb128 0x3
	.long	0x1a9
	.uleb128 0x5
	.byte	0x8
	.long	0x1a9
	.uleb128 0x5
	.byte	0x8
	.long	0x1b7
	.uleb128 0x8
	.ascii "LPSTR\0"
	.byte	0x4
	.word	0x150
	.byte	0x18
	.long	0x1bc
	.uleb128 0x8
	.ascii "LPCSTR\0"
	.byte	0x4
	.word	0x153
	.byte	0x17
	.long	0x1c2
	.uleb128 0x8
	.ascii "LPCTSTR\0"
	.byte	0x4
	.word	0x17c
	.byte	0x19
	.long	0x1d7
	.uleb128 0x8
	.ascii "HANDLE\0"
	.byte	0x4
	.word	0x195
	.byte	0x11
	.long	0x13e
	.uleb128 0x9
	.ascii "std\0"
	.byte	0xb
	.byte	0
	.long	0x42c
	.uleb128 0xa
	.ascii "__cxx11\0"
	.byte	0x7
	.word	0x11e
	.byte	0x41
	.uleb128 0xb
	.byte	0x7
	.word	0x11e
	.byte	0x41
	.long	0x213
	.uleb128 0xc
	.byte	0x5
	.byte	0x7f
	.byte	0xb
	.long	0x4f6
	.uleb128 0xc
	.byte	0x5
	.byte	0x80
	.byte	0xb
	.long	0x531
	.uleb128 0xc
	.byte	0x5
	.byte	0x86
	.byte	0xb
	.long	0x5ae
	.uleb128 0xc
	.byte	0x5
	.byte	0x8c
	.byte	0xb
	.long	0x5c8
	.uleb128 0xc
	.byte	0x5
	.byte	0x8d
	.byte	0xb
	.long	0x5e6
	.uleb128 0xc
	.byte	0x5
	.byte	0x8e
	.byte	0xb
	.long	0x5fe
	.uleb128 0xc
	.byte	0x5
	.byte	0x8f
	.byte	0xb
	.long	0x616
	.uleb128 0xc
	.byte	0x5
	.byte	0x91
	.byte	0xb
	.long	0x65f
	.uleb128 0xc
	.byte	0x5
	.byte	0x94
	.byte	0xb
	.long	0x67b
	.uleb128 0xc
	.byte	0x5
	.byte	0x96
	.byte	0xb
	.long	0x695
	.uleb128 0xc
	.byte	0x5
	.byte	0x99
	.byte	0xb
	.long	0x6b2
	.uleb128 0xc
	.byte	0x5
	.byte	0x9a
	.byte	0xb
	.long	0x6d0
	.uleb128 0xc
	.byte	0x5
	.byte	0x9b
	.byte	0xb
	.long	0x6f6
	.uleb128 0xc
	.byte	0x5
	.byte	0x9d
	.byte	0xb
	.long	0x71a
	.uleb128 0xc
	.byte	0x5
	.byte	0xa3
	.byte	0xb
	.long	0x73e
	.uleb128 0xc
	.byte	0x5
	.byte	0xa5
	.byte	0xb
	.long	0x74c
	.uleb128 0xc
	.byte	0x5
	.byte	0xa6
	.byte	0xb
	.long	0x761
	.uleb128 0xc
	.byte	0x5
	.byte	0xa7
	.byte	0xb
	.long	0x780
	.uleb128 0xc
	.byte	0x5
	.byte	0xa8
	.byte	0xb
	.long	0x7a4
	.uleb128 0xc
	.byte	0x5
	.byte	0xa9
	.byte	0xb
	.long	0x7c9
	.uleb128 0xc
	.byte	0x5
	.byte	0xab
	.byte	0xb
	.long	0x7e3
	.uleb128 0xc
	.byte	0x5
	.byte	0xac
	.byte	0xb
	.long	0x809
	.uleb128 0xc
	.byte	0x5
	.byte	0xf0
	.byte	0x16
	.long	0x59d
	.uleb128 0xc
	.byte	0x5
	.byte	0xf2
	.byte	0x16
	.long	0x828
	.uleb128 0xc
	.byte	0x5
	.byte	0xf4
	.byte	0x16
	.long	0x83d
	.uleb128 0xc
	.byte	0x5
	.byte	0xf5
	.byte	0x16
	.long	0x49d
	.uleb128 0xc
	.byte	0x5
	.byte	0xf6
	.byte	0x16
	.long	0x856
	.uleb128 0xc
	.byte	0x5
	.byte	0xf8
	.byte	0x16
	.long	0x874
	.uleb128 0xc
	.byte	0x5
	.byte	0xf9
	.byte	0x16
	.long	0x8d8
	.uleb128 0xc
	.byte	0x5
	.byte	0xfa
	.byte	0x16
	.long	0x88d
	.uleb128 0xc
	.byte	0x5
	.byte	0xfb
	.byte	0x16
	.long	0x8b2
	.uleb128 0xc
	.byte	0x5
	.byte	0xfc
	.byte	0x16
	.long	0x8f7
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x67
	.byte	0x3
	.ascii "_ZSt3absg\0"
	.long	0x92f
	.long	0x349
	.uleb128 0xe
	.long	0x92f
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x55
	.byte	0x3
	.ascii "_ZSt3absn\0"
	.long	0x945
	.long	0x369
	.uleb128 0xe
	.long	0x945
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x4f
	.byte	0x3
	.ascii "_ZSt3abse\0"
	.long	0x54a
	.long	0x389
	.uleb128 0xe
	.long	0x54a
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x4b
	.byte	0x3
	.ascii "_ZSt3absf\0"
	.long	0x168
	.long	0x3a9
	.uleb128 0xe
	.long	0x168
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x47
	.byte	0x3
	.ascii "_ZSt3absd\0"
	.long	0x540
	.long	0x3c9
	.uleb128 0xe
	.long	0x540
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x3d
	.byte	0x3
	.ascii "_ZSt3absx\0"
	.long	0xb2
	.long	0x3e9
	.uleb128 0xe
	.long	0xb2
	.byte	0
	.uleb128 0xd
	.ascii "abs\0"
	.byte	0x6
	.byte	0x38
	.byte	0x3
	.ascii "_ZSt3absl\0"
	.long	0xe0
	.long	0x409
	.uleb128 0xe
	.long	0xe0
	.byte	0
	.uleb128 0xf
	.ascii "div\0"
	.byte	0x5
	.byte	0xb1
	.byte	0x3
	.ascii "_ZSt3divll\0"
	.long	0x531
	.uleb128 0xe
	.long	0xe0
	.uleb128 0xe
	.long	0xe0
	.byte	0
	.byte	0
	.uleb128 0x10
	.ascii "__gnu_cxx\0"
	.byte	0x7
	.word	0x120
	.byte	0xb
	.long	0x4ca
	.uleb128 0xa
	.ascii "__cxx11\0"
	.byte	0x7
	.word	0x122
	.byte	0x41
	.uleb128 0xb
	.byte	0x7
	.word	0x122
	.byte	0x41
	.long	0x43f
	.uleb128 0xc
	.byte	0x5
	.byte	0xc8
	.byte	0xb
	.long	0x59d
	.uleb128 0xc
	.byte	0x5
	.byte	0xce
	.byte	0xb
	.long	0x828
	.uleb128 0xc
	.byte	0x5
	.byte	0xd2
	.byte	0xb
	.long	0x83d
	.uleb128 0xc
	.byte	0x5
	.byte	0xd8
	.byte	0xb
	.long	0x856
	.uleb128 0xc
	.byte	0x5
	.byte	0xe3
	.byte	0xb
	.long	0x874
	.uleb128 0xc
	.byte	0x5
	.byte	0xe4
	.byte	0xb
	.long	0x88d
	.uleb128 0xc
	.byte	0x5
	.byte	0xe5
	.byte	0xb
	.long	0x8b2
	.uleb128 0xc
	.byte	0x5
	.byte	0xe7
	.byte	0xb
	.long	0x8d8
	.uleb128 0xc
	.byte	0x5
	.byte	0xe8
	.byte	0xb
	.long	0x8f7
	.uleb128 0xf
	.ascii "div\0"
	.byte	0x5
	.byte	0xd5
	.byte	0x3
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x59d
	.uleb128 0xe
	.long	0xb2
	.uleb128 0xe
	.long	0xb2
	.byte	0
	.byte	0
	.uleb128 0x11
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0x8
	.byte	0x3c
	.byte	0x12
	.long	0x4f6
	.uleb128 0x12
	.ascii "quot\0"
	.byte	0x8
	.byte	0x3d
	.byte	0x9
	.long	0xd9
	.byte	0
	.uleb128 0x12
	.ascii "rem\0"
	.byte	0x8
	.byte	0x3e
	.byte	0x9
	.long	0xd9
	.byte	0x4
	.byte	0
	.uleb128 0x4
	.ascii "div_t\0"
	.byte	0x8
	.byte	0x3f
	.byte	0x5
	.long	0x4ca
	.uleb128 0x11
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0x8
	.byte	0x41
	.byte	0x12
	.long	0x531
	.uleb128 0x12
	.ascii "quot\0"
	.byte	0x8
	.byte	0x42
	.byte	0xa
	.long	0xe0
	.byte	0
	.uleb128 0x12
	.ascii "rem\0"
	.byte	0x8
	.byte	0x43
	.byte	0xa
	.long	0xe0
	.byte	0x4
	.byte	0
	.uleb128 0x4
	.ascii "ldiv_t\0"
	.byte	0x8
	.byte	0x44
	.byte	0x5
	.long	0x504
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x2
	.byte	0x10
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0x5
	.byte	0x8
	.long	0x55f
	.uleb128 0x13
	.uleb128 0x5
	.byte	0x8
	.long	0x103
	.uleb128 0x5
	.byte	0x8
	.long	0xec
	.uleb128 0x14
	.byte	0x10
	.byte	0x8
	.word	0x2d7
	.byte	0x12
	.ascii "7lldiv_t\0"
	.long	0x59d
	.uleb128 0x15
	.ascii "quot\0"
	.byte	0x8
	.word	0x2d7
	.byte	0x30
	.long	0xb2
	.byte	0
	.uleb128 0x15
	.ascii "rem\0"
	.byte	0x8
	.word	0x2d7
	.byte	0x36
	.long	0xb2
	.byte	0x8
	.byte	0
	.uleb128 0x8
	.ascii "lldiv_t\0"
	.byte	0x8
	.word	0x2d7
	.byte	0x3d
	.long	0x56c
	.uleb128 0x16
	.ascii "atexit\0"
	.byte	0x8
	.word	0x1a6
	.byte	0xf
	.long	0xd9
	.long	0x5c8
	.uleb128 0xe
	.long	0x559
	.byte	0
	.uleb128 0x16
	.ascii "atof\0"
	.byte	0x8
	.word	0x1a9
	.byte	0x12
	.long	0x540
	.long	0x5e0
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0x84
	.uleb128 0x16
	.ascii "atoi\0"
	.byte	0x8
	.word	0x1ac
	.byte	0xf
	.long	0xd9
	.long	0x5fe
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x16
	.ascii "atol\0"
	.byte	0x8
	.word	0x1ae
	.byte	0x10
	.long	0xe0
	.long	0x616
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x16
	.ascii "bsearch\0"
	.byte	0x8
	.word	0x1b2
	.byte	0x11
	.long	0x13e
	.long	0x645
	.uleb128 0xe
	.long	0x186
	.uleb128 0xe
	.long	0x186
	.uleb128 0xe
	.long	0x89
	.uleb128 0xe
	.long	0x89
	.uleb128 0xe
	.long	0x645
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0x64b
	.uleb128 0x17
	.long	0xd9
	.long	0x65f
	.uleb128 0xe
	.long	0x186
	.uleb128 0xe
	.long	0x186
	.byte	0
	.uleb128 0x16
	.ascii "div\0"
	.byte	0x8
	.word	0x1b8
	.byte	0x11
	.long	0x4f6
	.long	0x67b
	.uleb128 0xe
	.long	0xd9
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "getenv\0"
	.byte	0x8
	.word	0x1b9
	.byte	0x11
	.long	0xec
	.long	0x695
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x16
	.ascii "ldiv\0"
	.byte	0x8
	.word	0x1c3
	.byte	0x12
	.long	0x531
	.long	0x6b2
	.uleb128 0xe
	.long	0xe0
	.uleb128 0xe
	.long	0xe0
	.byte	0
	.uleb128 0x16
	.ascii "mblen\0"
	.byte	0x8
	.word	0x1c5
	.byte	0xf
	.long	0xd9
	.long	0x6d0
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x89
	.byte	0
	.uleb128 0x16
	.ascii "mbstowcs\0"
	.byte	0x8
	.word	0x1cd
	.byte	0x12
	.long	0x89
	.long	0x6f6
	.uleb128 0xe
	.long	0xf2
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x89
	.byte	0
	.uleb128 0x16
	.ascii "mbtowc\0"
	.byte	0x8
	.word	0x1cb
	.byte	0xf
	.long	0xd9
	.long	0x71a
	.uleb128 0xe
	.long	0xf2
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x89
	.byte	0
	.uleb128 0x18
	.ascii "qsort\0"
	.byte	0x8
	.word	0x1b3
	.byte	0x10
	.long	0x73e
	.uleb128 0xe
	.long	0x13e
	.uleb128 0xe
	.long	0x89
	.uleb128 0xe
	.long	0x89
	.uleb128 0xe
	.long	0x645
	.byte	0
	.uleb128 0x19
	.ascii "rand\0"
	.byte	0x8
	.word	0x1d0
	.byte	0xf
	.long	0xd9
	.uleb128 0x18
	.ascii "srand\0"
	.byte	0x8
	.word	0x1d2
	.byte	0x10
	.long	0x761
	.uleb128 0xe
	.long	0x108
	.byte	0
	.uleb128 0x16
	.ascii "strtod\0"
	.byte	0x8
	.word	0x1de
	.byte	0x20
	.long	0x540
	.long	0x780
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.byte	0
	.uleb128 0x16
	.ascii "strtol\0"
	.byte	0x8
	.word	0x201
	.byte	0x10
	.long	0xe0
	.long	0x7a4
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "strtoul\0"
	.byte	0x8
	.word	0x203
	.byte	0x19
	.long	0x118
	.long	0x7c9
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "system\0"
	.byte	0x8
	.word	0x207
	.byte	0xf
	.long	0xd9
	.long	0x7e3
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x16
	.ascii "wcstombs\0"
	.byte	0x8
	.word	0x20c
	.byte	0x12
	.long	0x89
	.long	0x809
	.uleb128 0xe
	.long	0xec
	.uleb128 0xe
	.long	0x560
	.uleb128 0xe
	.long	0x89
	.byte	0
	.uleb128 0x16
	.ascii "wctomb\0"
	.byte	0x8
	.word	0x20a
	.byte	0xf
	.long	0xd9
	.long	0x828
	.uleb128 0xe
	.long	0xec
	.uleb128 0xe
	.long	0xf8
	.byte	0
	.uleb128 0x1a
	.ascii "_Exit\0"
	.byte	0x8
	.word	0x18b
	.byte	0x36
	.long	0x83d
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "llabs\0"
	.byte	0x8
	.word	0x2dd
	.byte	0x34
	.long	0xb2
	.long	0x856
	.uleb128 0xe
	.long	0xb2
	.byte	0
	.uleb128 0x16
	.ascii "lldiv\0"
	.byte	0x8
	.word	0x2d9
	.byte	0x25
	.long	0x59d
	.long	0x874
	.uleb128 0xe
	.long	0xb2
	.uleb128 0xe
	.long	0xb2
	.byte	0
	.uleb128 0x16
	.ascii "atoll\0"
	.byte	0x8
	.word	0x2ef
	.byte	0x35
	.long	0xb2
	.long	0x88d
	.uleb128 0xe
	.long	0x5e0
	.byte	0
	.uleb128 0x16
	.ascii "strtoll\0"
	.byte	0x8
	.word	0x2e0
	.byte	0x28
	.long	0xb2
	.long	0x8b2
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "strtoull\0"
	.byte	0x8
	.word	0x2e1
	.byte	0x31
	.long	0x98
	.long	0x8d8
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.uleb128 0xe
	.long	0xd9
	.byte	0
	.uleb128 0x16
	.ascii "strtof\0"
	.byte	0x8
	.word	0x1e5
	.byte	0x1f
	.long	0x168
	.long	0x8f7
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.byte	0
	.uleb128 0x16
	.ascii "strtold\0"
	.byte	0x8
	.word	0x1f0
	.byte	0x27
	.long	0x54a
	.long	0x917
	.uleb128 0xe
	.long	0x5e0
	.uleb128 0xe
	.long	0x566
	.byte	0
	.uleb128 0xc
	.byte	0x9
	.byte	0x27
	.byte	0xc
	.long	0x5ae
	.uleb128 0xc
	.byte	0x9
	.byte	0x33
	.byte	0xc
	.long	0x4f6
	.uleb128 0xc
	.byte	0x9
	.byte	0x34
	.byte	0xc
	.long	0x531
	.uleb128 0x2
	.byte	0x10
	.byte	0x4
	.ascii "__float128\0"
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x329
	.uleb128 0x2
	.byte	0x10
	.byte	0x5
	.ascii "__int128\0"
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x349
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x369
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x389
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x3a9
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x3c9
	.uleb128 0xc
	.byte	0x9
	.byte	0x36
	.byte	0xc
	.long	0x3e9
	.uleb128 0xc
	.byte	0x9
	.byte	0x37
	.byte	0xc
	.long	0x5c8
	.uleb128 0xc
	.byte	0x9
	.byte	0x38
	.byte	0xc
	.long	0x5e6
	.uleb128 0xc
	.byte	0x9
	.byte	0x39
	.byte	0xc
	.long	0x5fe
	.uleb128 0xc
	.byte	0x9
	.byte	0x3a
	.byte	0xc
	.long	0x616
	.uleb128 0xc
	.byte	0x9
	.byte	0x3c
	.byte	0xc
	.long	0x49d
	.uleb128 0xc
	.byte	0x9
	.byte	0x3c
	.byte	0xc
	.long	0x409
	.uleb128 0xc
	.byte	0x9
	.byte	0x3c
	.byte	0xc
	.long	0x65f
	.uleb128 0xc
	.byte	0x9
	.byte	0x3e
	.byte	0xc
	.long	0x67b
	.uleb128 0xc
	.byte	0x9
	.byte	0x40
	.byte	0xc
	.long	0x695
	.uleb128 0xc
	.byte	0x9
	.byte	0x43
	.byte	0xc
	.long	0x6b2
	.uleb128 0xc
	.byte	0x9
	.byte	0x44
	.byte	0xc
	.long	0x6d0
	.uleb128 0xc
	.byte	0x9
	.byte	0x45
	.byte	0xc
	.long	0x6f6
	.uleb128 0xc
	.byte	0x9
	.byte	0x47
	.byte	0xc
	.long	0x71a
	.uleb128 0xc
	.byte	0x9
	.byte	0x48
	.byte	0xc
	.long	0x73e
	.uleb128 0xc
	.byte	0x9
	.byte	0x4a
	.byte	0xc
	.long	0x74c
	.uleb128 0xc
	.byte	0x9
	.byte	0x4b
	.byte	0xc
	.long	0x761
	.uleb128 0xc
	.byte	0x9
	.byte	0x4c
	.byte	0xc
	.long	0x780
	.uleb128 0xc
	.byte	0x9
	.byte	0x4d
	.byte	0xc
	.long	0x7a4
	.uleb128 0xc
	.byte	0x9
	.byte	0x4e
	.byte	0xc
	.long	0x7c9
	.uleb128 0xc
	.byte	0x9
	.byte	0x50
	.byte	0xc
	.long	0x7e3
	.uleb128 0xc
	.byte	0x9
	.byte	0x51
	.byte	0xc
	.long	0x809
	.uleb128 0x11
	.ascii "_STARTUPINFOA\0"
	.byte	0x68
	.byte	0xa
	.byte	0x33
	.byte	0x12
	.long	0xb92
	.uleb128 0x12
	.ascii "cb\0"
	.byte	0xa
	.byte	0x34
	.byte	0xb
	.long	0x15a
	.byte	0
	.uleb128 0x12
	.ascii "lpReserved\0"
	.byte	0xa
	.byte	0x35
	.byte	0xb
	.long	0x1c8
	.byte	0x8
	.uleb128 0x12
	.ascii "lpDesktop\0"
	.byte	0xa
	.byte	0x36
	.byte	0xb
	.long	0x1c8
	.byte	0x10
	.uleb128 0x12
	.ascii "lpTitle\0"
	.byte	0xa
	.byte	0x37
	.byte	0xb
	.long	0x1c8
	.byte	0x18
	.uleb128 0x12
	.ascii "dwX\0"
	.byte	0xa
	.byte	0x38
	.byte	0xb
	.long	0x15a
	.byte	0x20
	.uleb128 0x12
	.ascii "dwY\0"
	.byte	0xa
	.byte	0x39
	.byte	0xb
	.long	0x15a
	.byte	0x24
	.uleb128 0x12
	.ascii "dwXSize\0"
	.byte	0xa
	.byte	0x3a
	.byte	0xb
	.long	0x15a
	.byte	0x28
	.uleb128 0x12
	.ascii "dwYSize\0"
	.byte	0xa
	.byte	0x3b
	.byte	0xb
	.long	0x15a
	.byte	0x2c
	.uleb128 0x12
	.ascii "dwXCountChars\0"
	.byte	0xa
	.byte	0x3c
	.byte	0xb
	.long	0x15a
	.byte	0x30
	.uleb128 0x12
	.ascii "dwYCountChars\0"
	.byte	0xa
	.byte	0x3d
	.byte	0xb
	.long	0x15a
	.byte	0x34
	.uleb128 0x12
	.ascii "dwFillAttribute\0"
	.byte	0xa
	.byte	0x3e
	.byte	0xb
	.long	0x15a
	.byte	0x38
	.uleb128 0x12
	.ascii "dwFlags\0"
	.byte	0xa
	.byte	0x3f
	.byte	0xb
	.long	0x15a
	.byte	0x3c
	.uleb128 0x12
	.ascii "wShowWindow\0"
	.byte	0xa
	.byte	0x40
	.byte	0xa
	.long	0x14d
	.byte	0x40
	.uleb128 0x12
	.ascii "cbReserved2\0"
	.byte	0xa
	.byte	0x41
	.byte	0xa
	.long	0x14d
	.byte	0x42
	.uleb128 0x12
	.ascii "lpReserved2\0"
	.byte	0xa
	.byte	0x42
	.byte	0xc
	.long	0x177
	.byte	0x48
	.uleb128 0x12
	.ascii "hStdInput\0"
	.byte	0xa
	.byte	0x43
	.byte	0xc
	.long	0x1f8
	.byte	0x50
	.uleb128 0x12
	.ascii "hStdOutput\0"
	.byte	0xa
	.byte	0x44
	.byte	0xc
	.long	0x1f8
	.byte	0x58
	.uleb128 0x12
	.ascii "hStdError\0"
	.byte	0xa
	.byte	0x45
	.byte	0xc
	.long	0x1f8
	.byte	0x60
	.byte	0
	.uleb128 0x4
	.ascii "STARTUPINFOA\0"
	.byte	0xa
	.byte	0x46
	.byte	0x5
	.long	0xa29
	.uleb128 0x4
	.ascii "STARTUPINFO\0"
	.byte	0xa
	.byte	0x5d
	.byte	0x3
	.long	0xb92
	.uleb128 0x11
	.ascii "_PROCESS_INFORMATION\0"
	.byte	0x18
	.byte	0xa
	.byte	0x60
	.byte	0x12
	.long	0xc26
	.uleb128 0x12
	.ascii "hProcess\0"
	.byte	0xa
	.byte	0x61
	.byte	0xc
	.long	0x1f8
	.byte	0
	.uleb128 0x12
	.ascii "hThread\0"
	.byte	0xa
	.byte	0x62
	.byte	0xc
	.long	0x1f8
	.byte	0x8
	.uleb128 0x12
	.ascii "dwProcessId\0"
	.byte	0xa
	.byte	0x63
	.byte	0xb
	.long	0x15a
	.byte	0x10
	.uleb128 0x12
	.ascii "dwThreadId\0"
	.byte	0xa
	.byte	0x64
	.byte	0xb
	.long	0x15a
	.byte	0x14
	.byte	0
	.uleb128 0x4
	.ascii "PROCESS_INFORMATION\0"
	.byte	0xa
	.byte	0x65
	.byte	0x5
	.long	0xbbb
	.uleb128 0x1b
	.ascii "main\0"
	.byte	0x1
	.byte	0x4
	.byte	0x5
	.long	0xd9
	.quad	.LFB6172
	.quad	.LFE6172-.LFB6172
	.uleb128 0x1
	.byte	0x9c
	.long	0xd1a
	.uleb128 0x1c
	.ascii "applicationName\0"
	.byte	0x1
	.byte	0x6
	.byte	0xd
	.long	0x1e7
	.uleb128 0xa
	.byte	0x3
	.quad	.LC0
	.byte	0x9f
	.uleb128 0x1c
	.ascii "startupInfo\0"
	.byte	0x1
	.byte	0x9
	.byte	0x11
	.long	0xba7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1c
	.ascii "processInfo\0"
	.byte	0x1
	.byte	0xa
	.byte	0x19
	.long	0xc26
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x1d
	.quad	.LVL0
	.long	0xd1a
	.uleb128 0x1e
	.quad	.LVL1
	.long	0xd29
	.uleb128 0x1f
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x9
	.byte	0x3
	.quad	.LC0
	.uleb128 0x1f
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x1
	.byte	0x58
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x1
	.byte	0x59
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x2
	.byte	0x77
	.sleb128 32
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x2
	.byte	0x77
	.sleb128 40
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x2
	.byte	0x77
	.sleb128 48
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x2
	.byte	0x77
	.sleb128 56
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x1f
	.uleb128 0x3
	.byte	0x77
	.sleb128 64
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1f
	.uleb128 0x3
	.byte	0x77
	.sleb128 72
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.byte	0
	.byte	0
	.uleb128 0x20
	.ascii "__main\0"
	.ascii "__main\0"
	.uleb128 0x21
	.secrel32	.LASF0
	.secrel32	.LASF0
	.byte	0xa
	.byte	0xad
	.byte	0x1d
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0x2c
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.LFB6172
	.quad	.LFE6172-.LFB6172
	.quad	0
	.quad	0
	.section	.debug_ranges,"dr"
.Ldebug_ranges0:
	.quad	.LFB6172
	.quad	.LFE6172
	.quad	0
	.quad	0
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
.LASF0:
	.ascii "CreateProcessA\0"
	.ident	"GCC: (tdm64-1) 10.3.0"
